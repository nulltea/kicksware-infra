apiVersion: apps/v1
  {{- if .Values.deployment.stateful}}
kind: StatefulSet
  {{- else }}
kind: Deployment
  {{- end }}
metadata:
  name: {{ template "chart.fullname" . }}
  labels:
  {{- include "chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.deployment.replicaCount }}
  {{- end }}
  {{- if .Values.deployment.stateful}}
  updateStrategy:
    type: RollingUpdate
  {{- else }}
  strategy:
    type: RollingUpdate
  {{- end }}
  selector:
    matchLabels:
  {{- include "chart.selectorLabels" . | nindent 6 }}
  {{- if .Values.deployment.stateful}}
  serviceName: {{ .Values.deployment.serviceName }}
  {{- end }}
  template:
    metadata:
      labels:
    {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
            - name: transport
              containerPort: {{ .Values.service.transportPort }}
          env:
            - name: xpack.watcher.enabled
              value: "false"
            - name: network.host
              value: 0.0.0.0
            - name: discovery.seed_hosts
              value: {{ template "chart.fullname" .}},{{ template "chart.fullname" .}}-master,search.kicksware.com
            - name: cluster.initial_master_nodes
              value: {{ template "elasticsearch.endpoints" . }}
            - name: ES_JAVA_OPTS
              value: "-Xms512m -Xmx512m"
          volumeMounts:
          {{- range .Values.volumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
          {{- end }}
          {{- range $path, $config := .Values.config }}
            - name: config
              mountPath: /usr/share/elasticsearch/config/{{ $path }}
              subPath: {{ $path }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
            initialDelaySeconds: 60
            periodSeconds: 15
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
      initContainers:
        - name: configure-sysctl
          securityContext:
            runAsUser: 0
            privileged: true
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["sysctl", "-w", "vm.max_map_count=262144"]
      volumes:
        - name: config
          configMap:
            name: {{ template "chart.fullname" . }}-config
        {{- range .Values.volumes }}
        - name: {{ .name }}
          {{- with .host }}
          hostPath:
            path: {{ .pathBase }}{{ .path }}
            type: {{ .type }}
          {{- end }}
          {{- with .persistent }}
          persistentVolumeClaim:
            claimName: {{ .claim }}
          {{- end }}
        {{- end }}

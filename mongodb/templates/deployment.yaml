apiVersion: apps/v1
{{- if .Values.deployment.stateful}}
kind: StatefulSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  name: {{ template "chart.fullname" . }}
  labels:
  {{- include "chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.deployment.replicaCount }}
  {{- end }}
  {{- if .Values.deployment.stateful}}
  updateStrategy:
    type: RollingUpdate
  {{- else }}
  strategy:
    type: RollingUpdate
  {{- end }}
  selector:
    matchLabels:
  {{- include "chart.selectorLabels" . | nindent 6 }}
  {{- if .Values.deployment.stateful}}
  serviceName: {{ .Values.deployment.serviceName }}
  {{- end }}
  template:
    metadata:
      labels:
    {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: mongodb
              containerPort: {{ .Values.service.port }}
          envFrom:
            - configMapRef:
                name: {{ template "chart.fullname" . }}.env
            - secretRef:
                name: mongo-auth
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-auth
                  key: MONGO_USER
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-auth
                  key: MONGO_PASSWORD
          volumeMounts:
          {{- range .Values.volumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
          {{- end }}
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - db.adminCommand('ping')
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          lifecycle:
            postStart:
              exec:
                command:
                 - sh
                 - -c
                 - mongorestore -u=${MONGO_USER} -p=${MONGO_PASSWORD} /backup
            preStop:
              exec:
                command:
                  - sh
                  - -c
                  - mongodump --db={MONGO_DB} -u=${MONGO_USER} -p=${MONGO_PASSWORD} --out=/backup
      volumes:
        {{- range .Values.volumes }}
        - name: {{ .name }}
          {{- with .host }}
          hostPath:
            path: {{ .pathBase }}{{ .path }}
            type: {{ .type }}
          {{- end }}
          {{- with .persistent }}
          persistentVolumeClaim:
            claimName: {{ .claim }}
          {{- end }}
        {{- end }}


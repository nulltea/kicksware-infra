apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  labels:
  {{- include "chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
  {{- end }}
  selector:
    matchLabels:
  {{- include "chart.selectorLabels" . | nindent 6 }}
  # serviceName: mongodb-6c3816ec85f85dafe
  template:
    metadata:
      labels:
    {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: mongodb
              containerPort: {{ .Values.service.port }}
          env: []
          command:
            - mongod
          args:
            - --dbpath=/data/db
            - --replSet={{ .Values.replicaSetName }}
            - --port={{ .Values.service.port }}
            - --bind_ip=0.0.0.0
          volumeMounts:
            - name: data
              mountPath: /data/db
          livenessProbe:
            exec:
              command:
                - mongo
                - --eval
                - db.adminCommand('ping')
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - db.adminCommand('ping')
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        {{- if .Values.storage.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ template "chart.fullname" .}}.claim
        {{- else }}
        - name: data
          emptyDir: {}
  {{- end }}

